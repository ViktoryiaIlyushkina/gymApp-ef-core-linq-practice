// <auto-generated />
using System;
using GymApp.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymApp.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MembershipId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MembershipId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ivan.ivanov@mail.ru",
                            FirstName = "Ivan",
                            LastName = "Ivanov",
                            MembershipId = 1,
                            PhoneNumber = "+79111234567"
                        },
                        new
                        {
                            Id = 2,
                            Email = "olga.petrova@mail.ru",
                            FirstName = "Olga",
                            LastName = "Petrova",
                            MembershipId = 2,
                            PhoneNumber = "+79222345678"
                        },
                        new
                        {
                            Id = 3,
                            Email = "alexandr.sidorov@mail.ru",
                            FirstName = "Alexander",
                            LastName = "Sidorov",
                            MembershipId = 1,
                            PhoneNumber = "+79333456789"
                        },
                        new
                        {
                            Id = 4,
                            Email = "maria.kozlova@mail.ru",
                            FirstName = "Maria",
                            LastName = "Kozlova",
                            MembershipId = 2,
                            PhoneNumber = "+79444567890"
                        },
                        new
                        {
                            Id = 5,
                            Email = "andrey.kuznetsov@mail.ru",
                            FirstName = "Andrey",
                            LastName = "Kuznetsov",
                            MembershipId = 1,
                            PhoneNumber = "+79555678901"
                        },
                        new
                        {
                            Id = 6,
                            Email = "ekaterina.smirnova@mail.ru",
                            FirstName = "Ekaterina",
                            LastName = "Smirnova",
                            MembershipId = 2,
                            PhoneNumber = "+79666789012"
                        },
                        new
                        {
                            Id = 7,
                            Email = "dmitriy.popov@mail.ru",
                            FirstName = "Dmitry",
                            LastName = "Popov",
                            MembershipId = 1,
                            PhoneNumber = "+79777890123"
                        },
                        new
                        {
                            Id = 8,
                            Email = "elena.sokolova@mail.ru",
                            FirstName = "Elena",
                            LastName = "Sokolova",
                            MembershipId = 2,
                            PhoneNumber = "+79888901234"
                        },
                        new
                        {
                            Id = 9,
                            Email = "sergey.vasilev@mail.ru",
                            FirstName = "Sergey",
                            LastName = "Vasiliev",
                            MembershipId = 1,
                            PhoneNumber = "+79999012345"
                        },
                        new
                        {
                            Id = 10,
                            Email = "irina.romanova@mail.ru",
                            FirstName = "Irina",
                            LastName = "Romanova",
                            MembershipId = 2,
                            PhoneNumber = "+79111123456"
                        },
                        new
                        {
                            Id = 11,
                            Email = "alexey.morozov@mail.ru",
                            FirstName = "Alexey",
                            LastName = "Morozov",
                            MembershipId = 1,
                            PhoneNumber = "+79222234567"
                        },
                        new
                        {
                            Id = 12,
                            Email = "natalia.zaytseva@mail.ru",
                            FirstName = "Natalia",
                            LastName = "Zaytseva",
                            MembershipId = 2,
                            PhoneNumber = "+79333345678"
                        },
                        new
                        {
                            Id = 13,
                            Email = "pavel.grigoryev@mail.ru",
                            FirstName = "Pavel",
                            LastName = "Grigoryev",
                            MembershipId = 1,
                            PhoneNumber = "+79444456789"
                        },
                        new
                        {
                            Id = 14,
                            Email = "anna.kudryavtseva@mail.ru",
                            FirstName = "Anna",
                            LastName = "Kudryavtseva",
                            MembershipId = 2,
                            PhoneNumber = "+79555567890"
                        },
                        new
                        {
                            Id = 15,
                            Email = "denis.petrov@mail.ru",
                            FirstName = "Denis",
                            LastName = "Petrov",
                            MembershipId = 1,
                            PhoneNumber = "+79666678901"
                        });
                });

            modelBuilder.Entity("GymApp.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusculeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Exercise for chest, triceps and shoulder muscles.",
                            MusculeGroup = "Chest",
                            Name = "Push-ups"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Exercise for back, biceps and shoulders muscles.",
                            MusculeGroup = "Back",
                            Name = "Lifts"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Exercise for leg, buttock and back muscles.",
                            MusculeGroup = "Legs",
                            Name = "Squats"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Exercise for the chest, triceps, and shoulder muscles performed using a barbell or dumbbell.",
                            MusculeGroup = "Chest",
                            Name = "Bench Press"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Exercise for the back, biceps, and shoulder muscles performed using barbell or dumbbell.",
                            MusculeGroup = "Back",
                            Name = "Upper Thrust"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Exercise for the back, legs, buttocks and shoulders using a barbell.",
                            MusculeGroup = "Back",
                            Name = "Deadlift"
                        },
                        new
                        {
                            Id = 7,
                            Description = "A shoulder muscle exercise performed using a barbell or dumbbell.",
                            MusculeGroup = "Shoulders",
                            Name = "Standing Press"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Exercise for the back, biceps, and shoulders muscles performed using a barbell.",
                            MusculeGroup = "Back",
                            Name = "Barbell pull"
                        },
                        new
                        {
                            Id = 9,
                            Description = "A biceps muscle exercise performed using a barbell or dumbbell.",
                            MusculeGroup = "Biceps",
                            Name = "Biceps"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Triceps muscle exercise performed using a barbell or dumbbell.",
                            MusculeGroup = "Triceps",
                            Name = "Triceps"
                        },
                        new
                        {
                            Id = 11,
                            Description = "A self-weight exercise for the abs.",
                            MusculeGroup = "Press",
                            Name = "Press"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Biceps Muscle Exercise performed using a barbell or dumbbell.",
                            MusculeGroup = "Biceps",
                            Name = "Biceps Lift"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Exercise for shoulder muscles performed using dumbbells.",
                            MusculeGroup = "Shoulders",
                            Name = "Dumbbell Press"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Exercise for the back, biceps, and shoulders muscles using dumbbells.",
                            MusculeGroup = "Back",
                            Name = "Dumbbell pull"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Exercise for the biceps muscles performed using a barbell or dumbbell.",
                            MusculeGroup = "Biceps",
                            Name = "Biceps flexions"
                        });
                });

            modelBuilder.Entity("GymApp.Models.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Memberships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 12,
                            Price = 2000m,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Duration = 6,
                            Price = 3500m,
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            Duration = 3,
                            Price = 700m,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Duration = 12,
                            Price = 5000m,
                            Type = 2
                        },
                        new
                        {
                            Id = 5,
                            Duration = 6,
                            Price = 1200m,
                            Type = 1
                        },
                        new
                        {
                            Id = 6,
                            Duration = 3,
                            Price = 1500m,
                            Type = 2
                        },
                        new
                        {
                            Id = 7,
                            Duration = 12,
                            Price = 2500m,
                            Type = 1
                        },
                        new
                        {
                            Id = 8,
                            Duration = 6,
                            Price = 4000m,
                            Type = 2
                        },
                        new
                        {
                            Id = 9,
                            Duration = 3,
                            Price = 800m,
                            Type = 1
                        },
                        new
                        {
                            Id = 10,
                            Duration = 12,
                            Price = 6000m,
                            Type = 2
                        },
                        new
                        {
                            Id = 11,
                            Duration = 6,
                            Price = 1500m,
                            Type = 1
                        },
                        new
                        {
                            Id = 12,
                            Duration = 3,
                            Price = 2000m,
                            Type = 2
                        },
                        new
                        {
                            Id = 13,
                            Duration = 12,
                            Price = 3000m,
                            Type = 1
                        },
                        new
                        {
                            Id = 14,
                            Duration = 6,
                            Price = 4500m,
                            Type = 2
                        },
                        new
                        {
                            Id = 15,
                            Duration = 3,
                            Price = 900m,
                            Type = 1
                        });
                });

            modelBuilder.Entity("GymApp.Models.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Experience = 5,
                            FirstName = "Andrey",
                            LastName = "Petrov",
                            Specialization = "Fitness"
                        },
                        new
                        {
                            Id = 2,
                            Experience = 8,
                            FirstName = "Olga",
                            LastName = "Sidorova",
                            Specialization = "Bodybuilding"
                        },
                        new
                        {
                            Id = 3,
                            Experience = 3,
                            FirstName = "Maxim",
                            LastName = "Ivanov",
                            Specialization = "Fitness"
                        },
                        new
                        {
                            Id = 4,
                            Experience = 7,
                            FirstName = "Elena",
                            LastName = "Kuznetsova",
                            Specialization = "Bodybuilding"
                        },
                        new
                        {
                            Id = 5,
                            Experience = 4,
                            FirstName = "Sergey",
                            LastName = "Vasiliev",
                            Specialization = "Fitness"
                        },
                        new
                        {
                            Id = 6,
                            Experience = 6,
                            FirstName = "Irina",
                            LastName = "Romanova",
                            Specialization = "Bodybuilding"
                        },
                        new
                        {
                            Id = 7,
                            Experience = 2,
                            FirstName = "Alexey",
                            LastName = "Morozov",
                            Specialization = "Fitness"
                        },
                        new
                        {
                            Id = 8,
                            Experience = 9,
                            FirstName = "Natalia",
                            LastName = "Zaitseva",
                            Specialization = "Bodybuilding"
                        },
                        new
                        {
                            Id = 9,
                            Experience = 5,
                            FirstName = "Pavel",
                            LastName = "Grigoriev",
                            Specialization = "Fitness"
                        },
                        new
                        {
                            Id = 10,
                            Experience = 8,
                            FirstName = "Anna",
                            LastName = "Kudryavtseva",
                            Specialization = "Bodybuilding"
                        },
                        new
                        {
                            Id = 11,
                            Experience = 3,
                            FirstName = "Denis",
                            LastName = "Petrov",
                            Specialization = "Fitness"
                        },
                        new
                        {
                            Id = 12,
                            Experience = 7,
                            FirstName = "Ksenia",
                            LastName = "Smirnova",
                            Specialization = "Bodybuilding"
                        },
                        new
                        {
                            Id = 13,
                            Experience = 4,
                            FirstName = "Dmitry",
                            LastName = "Popov",
                            Specialization = "Fitness"
                        },
                        new
                        {
                            Id = 14,
                            Experience = 6,
                            FirstName = "Maria",
                            LastName = "Kozlova",
                            Specialization = "Bodybuilding"
                        },
                        new
                        {
                            Id = 15,
                            Experience = 2,
                            FirstName = "Alexander",
                            LastName = "Sidorov",
                            Specialization = "Fitness"
                        });
                });

            modelBuilder.Entity("GymApp.Models.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("TrainerId");

                    b.ToTable("Trainings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            Date = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 60,
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            Date = new DateTime(2023, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 45,
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            Date = new DateTime(2023, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 60,
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 4,
                            Date = new DateTime(2023, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 45,
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 5,
                            ClientId = 5,
                            Date = new DateTime(2023, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 60,
                            TrainerId = 5
                        },
                        new
                        {
                            Id = 6,
                            ClientId = 6,
                            Date = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 45,
                            TrainerId = 6
                        },
                        new
                        {
                            Id = 7,
                            ClientId = 7,
                            Date = new DateTime(2023, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 60,
                            TrainerId = 7
                        },
                        new
                        {
                            Id = 8,
                            ClientId = 8,
                            Date = new DateTime(2023, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 45,
                            TrainerId = 8
                        },
                        new
                        {
                            Id = 9,
                            ClientId = 9,
                            Date = new DateTime(2023, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 60,
                            TrainerId = 9
                        },
                        new
                        {
                            Id = 10,
                            ClientId = 10,
                            Date = new DateTime(2023, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 45,
                            TrainerId = 10
                        },
                        new
                        {
                            Id = 11,
                            ClientId = 11,
                            Date = new DateTime(2023, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 60,
                            TrainerId = 11
                        },
                        new
                        {
                            Id = 12,
                            ClientId = 12,
                            Date = new DateTime(2023, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 45,
                            TrainerId = 12
                        },
                        new
                        {
                            Id = 13,
                            ClientId = 13,
                            Date = new DateTime(2023, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 60,
                            TrainerId = 13
                        },
                        new
                        {
                            Id = 14,
                            ClientId = 14,
                            Date = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 45,
                            TrainerId = 14
                        },
                        new
                        {
                            Id = 15,
                            ClientId = 15,
                            Date = new DateTime(2023, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 60,
                            TrainerId = 15
                        });
                });

            modelBuilder.Entity("GymApp.Models.TrainingExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("TrainingId");

                    b.ToTable("TrainingExercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExerciseId = 1,
                            Reps = 10,
                            Sets = 3,
                            TrainingId = 1
                        },
                        new
                        {
                            Id = 2,
                            ExerciseId = 2,
                            Reps = 8,
                            Sets = 3,
                            TrainingId = 1
                        },
                        new
                        {
                            Id = 3,
                            ExerciseId = 3,
                            Reps = 12,
                            Sets = 3,
                            TrainingId = 1
                        },
                        new
                        {
                            Id = 4,
                            ExerciseId = 4,
                            Reps = 8,
                            Sets = 3,
                            TrainingId = 2
                        },
                        new
                        {
                            Id = 5,
                            ExerciseId = 5,
                            Reps = 10,
                            Sets = 3,
                            TrainingId = 2
                        },
                        new
                        {
                            Id = 6,
                            ExerciseId = 6,
                            Reps = 5,
                            Sets = 1,
                            TrainingId = 2
                        },
                        new
                        {
                            Id = 7,
                            ExerciseId = 7,
                            Reps = 12,
                            Sets = 3,
                            TrainingId = 3
                        },
                        new
                        {
                            Id = 8,
                            ExerciseId = 8,
                            Reps = 10,
                            Sets = 3,
                            TrainingId = 3
                        },
                        new
                        {
                            Id = 9,
                            ExerciseId = 9,
                            Reps = 15,
                            Sets = 3,
                            TrainingId = 3
                        },
                        new
                        {
                            Id = 10,
                            ExerciseId = 10,
                            Reps = 10,
                            Sets = 3,
                            TrainingId = 4
                        },
                        new
                        {
                            Id = 11,
                            ExerciseId = 11,
                            Reps = 12,
                            Sets = 3,
                            TrainingId = 4
                        },
                        new
                        {
                            Id = 12,
                            ExerciseId = 12,
                            Reps = 15,
                            Sets = 3,
                            TrainingId = 4
                        },
                        new
                        {
                            Id = 13,
                            ExerciseId = 13,
                            Reps = 8,
                            Sets = 3,
                            TrainingId = 5
                        },
                        new
                        {
                            Id = 14,
                            ExerciseId = 14,
                            Reps = 10,
                            Sets = 3,
                            TrainingId = 5
                        },
                        new
                        {
                            Id = 15,
                            ExerciseId = 15,
                            Reps = 12,
                            Sets = 3,
                            TrainingId = 5
                        });
                });

            modelBuilder.Entity("GymApp.Models.Client", b =>
                {
                    b.HasOne("GymApp.Models.Membership", "Membership")
                        .WithMany("Clients")
                        .HasForeignKey("MembershipId");

                    b.Navigation("Membership");
                });

            modelBuilder.Entity("GymApp.Models.Training", b =>
                {
                    b.HasOne("GymApp.Models.Client", "Client")
                        .WithMany("Trainings")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymApp.Models.Trainer", "Trainer")
                        .WithMany("Trainings")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("GymApp.Models.TrainingExercise", b =>
                {
                    b.HasOne("GymApp.Models.Exercise", "Exercise")
                        .WithMany("TrainingExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymApp.Models.Training", "Training")
                        .WithMany("TrainingExercises")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("GymApp.Models.Client", b =>
                {
                    b.Navigation("Trainings");
                });

            modelBuilder.Entity("GymApp.Models.Exercise", b =>
                {
                    b.Navigation("TrainingExercises");
                });

            modelBuilder.Entity("GymApp.Models.Membership", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("GymApp.Models.Trainer", b =>
                {
                    b.Navigation("Trainings");
                });

            modelBuilder.Entity("GymApp.Models.Training", b =>
                {
                    b.Navigation("TrainingExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
